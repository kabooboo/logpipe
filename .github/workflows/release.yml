name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get tag version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binaries
      run: |
        # Build for multiple platforms
        mkdir -p dist
        
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -o dist/logpipe-linux-amd64 main.go
        
        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -o dist/logpipe-linux-arm64 main.go
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -o dist/logpipe-darwin-amd64 main.go
        
        # macOS ARM64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -o dist/logpipe-darwin-arm64 main.go
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -o dist/logpipe-windows-amd64.exe main.go
        
        # Create checksums
        cd dist
        sha256sum * > checksums.txt

    - name: Create Release with Assets
      run: |
        # Create release notes
        cat > release_notes.md << 'EOF'
        ## What's Changed
        
        See the full changelog and compare: https://github.com/${{ github.repository }}/compare/...
        
        ## Installation
        
        ### Using Go Install (Recommended)
        ```bash
        go install github.com/kabooboo/logpipe@${{ steps.get_version.outputs.VERSION }}
        ```
        
        ### Download Binaries
        
        #### Linux
        ```bash
        # AMD64
        curl -L -o logpipe https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/logpipe-linux-amd64
        chmod +x logpipe
        
        # ARM64
        curl -L -o logpipe https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/logpipe-linux-arm64
        chmod +x logpipe
        ```
        
        #### macOS
        ```bash
        # Intel Macs
        curl -L -o logpipe https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/logpipe-darwin-amd64
        chmod +x logpipe
        
        # Apple Silicon Macs
        curl -L -o logpipe https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/logpipe-darwin-arm64
        chmod +x logpipe
        ```
        
        #### Windows
        ```powershell
        # Download logpipe-windows-amd64.exe and add to PATH
        ```
        
        ## Usage
        
        ```bash
        # Basic usage
        kubectl logs my-pod | logpipe
        
        # With files
        cat app.log | logpipe
        ```
        EOF
        
        # Create release and upload all assets at once
        gh release create ${{ steps.get_version.outputs.VERSION }} \
          --title "LogPipe ${{ steps.get_version.outputs.VERSION }}" \
          --notes-file release_notes.md \
          dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}